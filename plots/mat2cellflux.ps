%!PS-Adobe-2.0
%%Title: ./mat2cellflux.ps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Thu Feb 27 12:25:26 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 482
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -36 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./mat2cellflux.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (aaron)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Feb 27 12:25:26 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Times-Roman) findfont 110 scalefont setfont
1.000 UL
LTb
473 352 M
63 0 V
4305 0 R
-63 0 V
stroke
407 352 M
[ [(Times-Roman) 110.0 0.0 true true 0 (-8)]
] -36.7 MRshow
1.000 UL
LTb
473 683 M
63 0 V
4305 0 R
-63 0 V
stroke
407 683 M
[ [(Times-Roman) 110.0 0.0 true true 0 (-6)]
] -36.7 MRshow
1.000 UL
LTb
473 1013 M
63 0 V
4305 0 R
-63 0 V
stroke
407 1013 M
[ [(Times-Roman) 110.0 0.0 true true 0 (-4)]
] -36.7 MRshow
1.000 UL
LTb
473 1344 M
63 0 V
4305 0 R
-63 0 V
stroke
407 1344 M
[ [(Times-Roman) 110.0 0.0 true true 0 (-2)]
] -36.7 MRshow
1.000 UL
LTb
473 1675 M
63 0 V
4305 0 R
-63 0 V
stroke
407 1675 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 0)]
] -36.7 MRshow
1.000 UL
LTb
473 2005 M
63 0 V
4305 0 R
-63 0 V
stroke
407 2005 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 2)]
] -36.7 MRshow
1.000 UL
LTb
473 2336 M
63 0 V
4305 0 R
-63 0 V
stroke
407 2336 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 4)]
] -36.7 MRshow
1.000 UL
LTb
473 2666 M
63 0 V
4305 0 R
-63 0 V
stroke
407 2666 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 6)]
] -36.7 MRshow
1.000 UL
LTb
473 2997 M
63 0 V
4305 0 R
-63 0 V
stroke
407 2997 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 8)]
] -36.7 MRshow
1.000 UL
LTb
473 3328 M
63 0 V
4305 0 R
-63 0 V
stroke
407 3328 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 10)]
] -36.7 MRshow
1.000 UL
LTb
473 3658 M
63 0 V
4305 0 R
-63 0 V
stroke
407 3658 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 12)]
] -36.7 MRshow
1.000 UL
LTb
473 3989 M
63 0 V
4305 0 R
-63 0 V
stroke
407 3989 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 14)]
] -36.7 MRshow
1.000 UL
LTb
473 352 M
0 63 V
0 3574 R
0 -63 V
stroke
473 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 0)]
] -36.7 MCshow
1.000 UL
LTb
910 352 M
0 63 V
0 3574 R
0 -63 V
stroke
910 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 1)]
] -36.7 MCshow
1.000 UL
LTb
1347 352 M
0 63 V
0 3574 R
0 -63 V
stroke
1347 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 2)]
] -36.7 MCshow
1.000 UL
LTb
1783 352 M
0 63 V
0 3574 R
0 -63 V
stroke
1783 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 3)]
] -36.7 MCshow
1.000 UL
LTb
2220 352 M
0 63 V
0 3574 R
0 -63 V
stroke
2220 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 4)]
] -36.7 MCshow
1.000 UL
LTb
2657 352 M
0 63 V
0 3574 R
0 -63 V
stroke
2657 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 5)]
] -36.7 MCshow
1.000 UL
LTb
3094 352 M
0 63 V
0 3574 R
0 -63 V
stroke
3094 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 6)]
] -36.7 MCshow
1.000 UL
LTb
3531 352 M
0 63 V
0 3574 R
0 -63 V
stroke
3531 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 7)]
] -36.7 MCshow
1.000 UL
LTb
3967 352 M
0 63 V
0 3574 R
0 -63 V
stroke
3967 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 8)]
] -36.7 MCshow
1.000 UL
LTb
4404 352 M
0 63 V
0 3574 R
0 -63 V
stroke
4404 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 9)]
] -36.7 MCshow
1.000 UL
LTb
4841 352 M
0 63 V
0 3574 R
0 -63 V
stroke
4841 242 M
[ [(Times-Roman) 110.0 0.0 true true 0 ( 10)]
] -36.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
473 3989 N
473 352 L
4368 0 V
0 3637 V
-4368 0 V
Z stroke
LCb setrgbcolor
88 2170 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 110.0 0.0 true true 0 (Flux)]
] -36.7 MCshow
grestore
LTb
LCb setrgbcolor
2657 77 M
[ [(Times-Roman) 110.0 0.0 true true 0 (Position in Slab)]
] -36.7 MCshow
LTb
2657 4154 M
[ [(Times-Roman) 110.0 0.0 true true 0 (Flux in Material 2 \(Cell\) Over Stochastic Realizations)]
] -36.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
LCb setrgbcolor
2519 3871 M
[ [(Times-Roman) 110.0 0.0 true true 0 (Original Realz, Traditional MC)]
] -36.7 MRshow
LT0
2585 3871 M
327 0 V
495 2116 M
44 110 V
43 -15 V
44 36 V
44 -3 V
43 -7 V
44 13 V
44 -41 V
43 -32 V
44 -57 V
44 -64 V
43 -25 V
44 -7 V
44 79 V
43 -50 V
44 -42 V
44 -24 V
43 -26 V
44 12 V
44 -35 V
43 19 V
44 -8 V
44 -5 V
43 -15 V
44 -42 V
44 -33 V
44 25 V
43 5 V
44 -7 V
44 -29 V
43 -9 V
44 -29 V
44 -8 V
43 23 V
44 -6 V
44 -4 V
43 -6 V
44 23 V
44 -26 V
43 -7 V
44 4 V
44 -6 V
43 7 V
44 -12 V
44 -15 V
43 5 V
44 -6 V
44 7 V
43 -3 V
44 1 V
44 3 V
44 -25 V
43 -1 V
44 5 V
44 -23 V
43 7 V
44 3 V
44 -13 V
43 4 V
44 -7 V
44 0 V
43 13 V
44 -19 V
44 -6 V
43 1 V
44 -2 V
44 -4 V
43 -3 V
44 1 V
44 2 V
43 -2 V
44 -6 V
44 -1 V
43 6 V
44 3 V
44 -9 V
44 -6 V
43 1 V
44 -2 V
44 0 V
43 -2 V
44 1 V
44 1 V
43 -8 V
44 2 V
44 1 V
43 -3 V
44 -4 V
44 0 V
43 2 V
44 0 V
44 -3 V
43 0 V
44 -3 V
44 0 V
43 0 V
44 -2 V
44 0 V
43 1 V
44 -1 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
LCb setrgbcolor
2519 3761 M
[ [(Times-Roman) 110.0 0.0 true true 0 (Or Rz, TMC Error)]
] -36.7 MRshow
LT1
2585 3761 M
327 0 V
495 933 M
0 2366 V
539 640 M
0 3172 V
582 664 M
0 3094 V
626 651 M
0 3193 V
670 697 M
0 3094 V
713 750 M
0 2975 V
757 742 M
0 3015 V
801 783 M
0 2852 V
844 874 M
0 2605 V
888 884 M
0 2471 V
932 943 M
0 2227 V
975 902 M
0 2258 V
1019 929 M
0 2190 V
1063 893 M
0 2420 V
1106 928 M
0 2250 V
44 -2147 R
0 1961 V
44 -1973 R
0 1936 V
43 -1859 R
0 1730 V
44 -1726 R
0 1746 V
44 -1728 R
0 1640 V
43 -1680 R
0 1759 V
44 -1689 R
0 1601 V
44 -1583 R
0 1556 V
43 -1564 R
0 1542 V
44 -1490 R
0 1354 V
44 -1296 R
0 1171 V
44 -1217 R
0 1314 V
43 -1327 R
0 1350 V
44 -1284 R
0 1205 V
44 -1174 R
0 1085 V
43 -1094 R
0 1084 V
44 -1043 R
0 944 V
44 -918 R
0 877 V
43 -924 R
0 1016 V
44 -1005 R
0 982 V
44 -973 R
0 955 V
43 -947 R
0 928 V
44 -924 R
0 965 V
44 -948 R
0 880 V
43 -844 R
0 794 V
44 -827 R
0 868 V
44 -838 R
0 796 V
43 -817 R
0 853 V
44 -808 R
0 738 V
44 -720 R
0 672 V
43 -681 R
0 700 V
44 -673 R
0 634 V
44 -639 R
0 659 V
43 -666 R
0 665 V
44 -666 R
0 670 V
44 -670 R
0 676 V
44 -655 R
0 584 V
stroke 2723 2051 M
43 -587 R
0 588 V
44 -593 R
0 608 V
44 -531 R
0 409 V
43 -418 R
0 440 V
44 -455 R
0 475 V
44 -453 R
0 406 V
43 -427 R
0 456 V
44 -448 R
0 427 V
44 -399 R
0 370 V
43 -402 R
0 460 V
44 -423 R
0 349 V
44 -342 R
0 323 V
43 -330 R
0 338 V
44 -329 R
0 315 V
44 -311 R
0 300 V
43 -287 R
0 268 V
44 -269 R
0 272 V
44 -290 R
0 311 V
43 -299 R
0 284 V
44 -269 R
0 242 V
44 -237 R
0 230 V
43 -246 R
0 275 V
44 -289 R
0 309 V
44 -285 R
0 243 V
44 -231 R
0 207 V
43 -193 R
0 179 V
44 -176 R
0 170 V
44 -186 R
0 203 V
43 -185 R
0 161 V
44 -171 R
0 184 V
44 -186 R
0 189 V
43 -179 R
0 155 V
44 -157 R
0 162 V
44 -169 R
0 178 V
43 -165 R
0 146 V
44 -131 R
0 109 V
44 -114 R
0 117 V
43 -119 R
0 126 V
44 -119 R
0 112 V
44 -112 R
0 107 V
43 -110 R
0 111 V
44 -99 R
0 83 V
44 -79 R
0 74 V
43 -80 R
0 86 V
44 -80 R
0 69 V
44 -67 R
0 66 V
43 -71 R
0 78 V
44 -76 R
0 72 V
495 2116 Pls
539 2226 Pls
582 2211 Pls
626 2247 Pls
670 2244 Pls
713 2237 Pls
757 2250 Pls
801 2209 Pls
844 2177 Pls
888 2120 Pls
932 2056 Pls
975 2031 Pls
1019 2024 Pls
1063 2103 Pls
1106 2053 Pls
1150 2011 Pls
1194 1987 Pls
1237 1961 Pls
1281 1973 Pls
1325 1938 Pls
1368 1957 Pls
1412 1949 Pls
1456 1944 Pls
1499 1929 Pls
1543 1887 Pls
1587 1854 Pls
1631 1879 Pls
1674 1884 Pls
1718 1877 Pls
1762 1848 Pls
1805 1839 Pls
1849 1810 Pls
1893 1802 Pls
1936 1825 Pls
1980 1819 Pls
2024 1815 Pls
2067 1809 Pls
2111 1832 Pls
2155 1806 Pls
2198 1799 Pls
2242 1803 Pls
2286 1797 Pls
2329 1804 Pls
2373 1792 Pls
2417 1777 Pls
2460 1782 Pls
2504 1776 Pls
2548 1783 Pls
2591 1780 Pls
2635 1781 Pls
2679 1784 Pls
2723 1759 Pls
2766 1758 Pls
2810 1763 Pls
2854 1740 Pls
2897 1747 Pls
2941 1750 Pls
2985 1737 Pls
3028 1741 Pls
3072 1734 Pls
3116 1734 Pls
3159 1747 Pls
3203 1728 Pls
3247 1722 Pls
3290 1723 Pls
3334 1721 Pls
3378 1717 Pls
3421 1714 Pls
3465 1715 Pls
3509 1717 Pls
3552 1715 Pls
3596 1709 Pls
3640 1708 Pls
3683 1714 Pls
3727 1717 Pls
3771 1708 Pls
3815 1702 Pls
3858 1703 Pls
3902 1701 Pls
3946 1701 Pls
3989 1699 Pls
4033 1700 Pls
4077 1701 Pls
4120 1693 Pls
4164 1695 Pls
4208 1696 Pls
4251 1693 Pls
4295 1689 Pls
4339 1689 Pls
4382 1691 Pls
4426 1691 Pls
4470 1688 Pls
4513 1688 Pls
4557 1685 Pls
4601 1685 Pls
4644 1685 Pls
4688 1683 Pls
4732 1683 Pls
4775 1684 Pls
4819 1683 Pls
2748 3761 Pls
% End plot #2
1.000 UL
LTb
473 3989 N
473 352 L
4368 0 V
0 3637 V
-4368 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
